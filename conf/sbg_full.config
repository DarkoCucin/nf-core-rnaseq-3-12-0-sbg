/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/rnaseq sbg full config
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file which is tailored to run nf-core/rnaseq on the SevenBridges platform
    with full_test profile setup.
----------------------------------------------------------------------------------------
*/

process {

    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'

    // Process-specific resource requirements
    // NOTE - Please try and re-use the labels below as much as possible.
    //        These labels are used and recognised by default in DSL2 files hosted on nf-core/modules.
    //        If possible, it would be nice to keep the same label naming convention when
    //        adding in your local modules too.
    // See https://www.nextflow.io/docs/latest/config.html#config-process-selectors

    withName:DESEQ2_QC {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:SALMON_SUMMARIZEDEXPERIMENT {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:SAMPLESHEET_CHECK {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:CUSTOM_DUMPSOFTWAREVERSIONS {
        cache = false
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:CUSTOM_GETCHROMSIZES {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:UCSC_BEDCLIP {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:UCSC_BEDGRAPHTOBIGWIG {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 2.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:SAMTOOLS_STATS {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:CAT_FASTQ {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:FQ_SUBSAMPLE {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:GUNZIP {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:PRESEQ_LCEXTRAP {
        errorStrategy = 'ignore'
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:SAMTOOLS_FLAGSTAT {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:SAMTOOLS_IDXSTATS {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:UMITOOLS_EXTRACT {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:UNTAR {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:BEDTOOLS_GENOMECOV {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 32.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:PICARD_MARKDUPLICATES {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 32.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:QUALIMAP_RNASEQ {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 32.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:FASTQC {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:SAMTOOLS_INDEX {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:SUBREAD_FEATURECOUNTS {
        cpus   = { check_max( 4                  , 'cpus'    ) }
        memory = { check_max( 8.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:STRINGTIE_STRINGTIE {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:RSEQC_BAMSTAT {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:RSEQC_INFEREXPERIMENT {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:RSEQC_INNERDISTANCE {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:RSEQC_JUNCTIONANNOTATION {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:RSEQC_JUNCTIONSATURATION {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:RSEQC_READDISTRIBUTION {
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 15.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
    withName:SAMTOOLS_SORT {
        cpus   = { check_max( 10                  , 'cpus'    ) }
        memory = { check_max( 10.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.4xlarge;ebs-gp2;400'
    }
    withName:TRIMGALORE {
        cpus   = { check_max( 10                  , 'cpus'    ) }
        memory = { check_max( 10.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.4xlarge;ebs-gp2;400'
    }
    withName:GTF2BED {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:SALMON_TX2GENE {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:GFFREAD {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='c6i.2xlarge;ebs-gp2;400'
    }
    withName:MULTIQC {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:RSEM_MERGE_COUNTS {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:SALMON_TXIMPORT {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:UMITOOLS_PREPAREFORRSEM {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:FASTP {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:HISAT2_EXTRACTSPLICESITES {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:RSEQC_READDUPLICATION {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:SALMON_INDEX {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:SALMON_QUANT {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:UMITOOLS_DEDUP {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.2xlarge;ebs-gp2;400'
    }
    withName:STAR_ALIGN_IGENOMES {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:STAR_GENOMEGENERATE_IGENOMES {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:SORTMERNA {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:BBMAP_BBSPLIT {
        errorStrategy = 'retry'
        maxRetries    = 2
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:HISAT2_ALIGN {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:HISAT2_BUILD {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 200.GB * task.attempt, 'memory' ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:RSEM_CALCULATEEXPRESSION {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:RSEM_PREPAREREFERENCE {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:RSEQC_TIN {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:STAR_ALIGN {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:STAR_GENOMEGENERATE {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.4xlarge;ebs-gp2;400'
    }
    withName:DUPRADAR {
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
        $sbgAWSInstanceHint='r6i.xlarge;ebs-gp2;400'
    }
}